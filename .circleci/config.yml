version: 2.1

jobs:
  build-nodejsapp:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - restore_cache:
          keys: [nodejs-build]
      - run:
          name: Build nodeapp
          command: |
            cd node-app
            npm install
      - save_cache:
          paths: [node-app/node_modules]
          key: nodejs-build
  test-nodejsapp:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - restore_cache:
          keys: [nodejs-build]
      - run:
          name: Run nodeapp tests
          command: |
            cd node-app
            npm install
            npm run test
  scan-nodejsapp:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - restore_cache:
          keys: [nodejs-build]
      - run:
          name: Audit & Analyze Nodeapp
          command: |
            cd node-app
            npm install
            npm audit fix --audit-level=critical  
  get-instance-ip:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar gzip
      - run:
          name: Add instance-end ip to ansible inventory
          command: |
            aws ec2 describe-instances \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --filters "Name=tag:project,Values=docker-server" \
            --output text >> ~/project/.circleci/ansible/inventory
            cat ~/project/.circleci/ansible/inventory
      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/inventory
  build-dockerimages:
    docker:
      - image: cimg/go:1.13
        environment:
          DOCKERHUB_PASSWORD: aminfourty7
          DOCKERHUB_USER: ANdakun.1010
        #auth:
        #  username: $DOCKERHUB_USER
        #  password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build nodeapp image
          command: |
            cd node-app
            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
            docker build -t aminfourty7/nodejs-kubernetes:latest .
            docker push aminfourty7/nodejs-kubernetes:latest
workflows:
  docker-deployment:
    jobs:
      - build-nodejsapp
      - test-nodejsapp:
          requires: [build-nodejsapp]
      - scan-nodejsapp:
          requires: [build-nodejsapp]
      - build-dockerimages:
          requires:[scan-nodejsapp]
      - get-instance-ip:
          requires: [test-nodejsapp, scan-nodejsapp]    
      #- configure-infrastructure:
      #    requires: [deploy-infrastructure]
      #- run-migrations:
      #    requires: [configure-infrastructure]
      #- deploy-frontend:
      #    requires: [run-migrations]
      #- deploy-backend:
      #    requires: [run-migrations]
      #- smoke-test:
      #    requires: [deploy-backend, deploy-frontend]
      #- cloudfront-update:
      #    requires: [smoke-test]
      #- cleanup:
      #    requires: [cloudfront-update]    