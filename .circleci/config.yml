version: 2.1

orbs:
  slack: circleci/slack@4.9.3

jobs:
  build-nodejsapp:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - restore_cache:
          keys: [nodejs-build]
      - run:
          name: Build nodeapp
          command: |
            cd node-app
            npm install
      - save_cache:
          paths: [node-app/node_modules]
          key: nodejs-build
  scan-nodejsapp:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - restore_cache:
          keys: [nodejs-build]
      - run:
          name: Audit & Analyze Nodeapp
          command: |
            cd node-app
            npm install
            npm audit fix --audit-level=critical  
  build-nodeapp-dockerimage:
    docker:
      - image: cimg/go:1.13
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build nodeapp image
          command: |
            
            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
            docker build -t aminfourty7/test-nodejs:latest .
            docker push aminfourty7/test-nodejs:latest
      - slack/notify:
          event: fail
          template: |
            {
              "text": "CircleCI job failed.",
              "blocks": [
                          {
                            "type": "header",
                            "text": {
                              "type": "plain_text",
                              "text": "Job Failed. :red_circle:",
                              "emoji": true
                              }
                          },
                          {
                            "type": "section",
                            "fields": [
                              {
                                "type": "mrkdwn",
                                "text": "*Job*: ${CIRCLE_JOB}"
                              }
                            ]
                          },
                          {
                            "type": "section",
                            "fields": [
                              {
                                "type": "mrkdwn",
                                "text": "*Project*: $CIRCLE_PROJECT_REPONAME"
                              },
                              {
                                "type": "mrkdwn",
                                "text": "*Branch*: $CIRCLE_BRANCH"
                              },
                              {
                                "type": "mrkdwn",
                                "text": "*Author*: $CIRCLE_USERNAME"
                              }
                            ],
                            "accessory": {
                              "type": "image",
                              "image_url": "https://assets.brandfolder.com/otz5mn-bw4j2w-6jzqo8/original/circle-logo-badge-black.png",
                              "alt_text": "CircleCI logo"
                            }
                          },
                          {
                            "type": "section",
                            "fields": [
                              {
                                "type": "mrkdwn",
                                "text": "*Mentions*: $SLACK_PARAM_MENTIONS"
                              }
                            ]
                          },
                          {
                            "type": "actions",
                            "elements": [
                              {
                                "type": "button",
                                "action_id": "basic_fail_view",
                                "text": {
                                    "type": "plain_text",
                                    "text": "View Job"
                                },
                                "url": "${CIRCLE_BUILD_URL}"
                              }
                            ]
                          }
                        ]
              }
      #- slack/notify:
      #    event: pass
      #    template: success_tagged_deploy_1      
  build-nginx-dockerimage:
    docker:
      - image: cimg/go:1.13
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build nginx image
          command: |
            cd nginx
            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
            docker build -t aminfourty7/test-nginx:latest .
            docker push aminfourty7/test-nginx:latest
      - slack/notify:
          event: fail
          template: basic_fail_1
      #- slack/notify:
      #    event: pass
      #    template: success_tagged_deploy_1       
  get-instance-ip:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar gzip
      - run:
          name: Add instance-end ip to ansible inventory
          command: |
            aws ec2 describe-instances \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --filters "Name=tag:project,Values=docker-server" \
            --output text >> ~/project/inventory
            cat ~/project/inventory
      - persist_to_workspace:
          root: ~/
          paths:
            - project/inventory
      - slack/notify:
          event: fail
          template: basic_fail_1
      #- slack/notify:
      #    event: pass
      #    template: success_tagged_deploy_1      
  run-containers:
    docker:
      - image: python:3.10-alpine3.16
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["9f:7e:0b:c8:94:45:60:f3:7a:95:ef:73:ca:42:dd:62"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible tar gzip aws-cli curl
      - attach_workspace:
          at: ~/    
      - run:
          name: run containers
          command:
            ansible-playbook -i inventory docker-ansible.yaml
      - run: echo "COMPLETED"      
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1
      - slack/notify:
          event: fail
          template: basic_fail_1                             
workflows:
  docker-deployment:
    jobs:
      - build-nodejsapp
      - scan-nodejsapp:
          requires: [build-nodejsapp]
      - build-nodeapp-dockerimage:
          requires: [scan-nodejsapp]
          context: slack-secrets
      - build-nginx-dockerimage:
          context: slack-secrets
          requires: [scan-nodejsapp]
          filters:
            branches:
              only: [main]
      - get-instance-ip:
          context: slack-secrets
          requires: [build-nginx-dockerimage, build-nodeapp-dockerimage]        
      - run-containers:
          context: slack-secrets
          requires: [get-instance-ip]
        